blueprint:
  name: Candeo C-ZB-RD1P (DPM mode) - Wired Light + Button Actions in ZHA
  description: >
    **Wired light control with extra actions for RD1-Pro in Dual Purpose Mode using ZHA**

    Use a Candeo RD1-Pro in DPM mode to control the wired light and still get remote actions for advanced automations.

    Single press toggles the wired light, rotation adjusts brightness, and you can assign custom actions to double press, hold, and release.


    **Features:**

    - **Single press**: Toggles your wired light  
    - **Double press**: Runs your custom action set  
    - **Hold** and **Release**: Run separate custom actions  
    - **Rotary control:**
      - ➕ Right rotation brightens by an adjustable step
      - ➖ Left rotation dims by an adjustable step


    **🛠️ Setup Required:**

    - Put your RD1-Pro into **Dual Purpose Mode (DPM)**.
    - In the selector below, pick the RD1-Pro device with model **C-ZB-RD1P-DPM**.
    - For the light, **choose the light entity from the same RD1-Pro device** so it controls the wired load.


    **How It Works:**

    - **Single Press**: `light.toggle` on the wired light entity  
    - **Rotate Knob**: Applies `brightness_step_pct` up or down  
    - **Double Press / Hold / Release**: Executes the action sequences you define


    **Requirements:**

    - RD1-Pro in Dual Purpose Mode
    - ZHA with device actions available
    - Wired light exposed as a Home Assistant `light` entity


    **Version**: 1.0

    **Compatible Devices**: Candeo C-ZB-RD1P-DPM

  domain: automation
  homeassistant:
    min_version: 2024.6.0

  input:
    device_section:
      name: Device & Wired Light
      icon: mdi:devices
      description: Select your RD1-Pro device in DPM and the wired light entity from the same device
      input:
        remote_device:
          name: RD1-Pro Device (DPM)
          description: Select the RD1-Pro device that is in Dual Purpose Mode.
          selector:
            device:
              filter:
                - integration: zha
                  manufacturer: Candeo
                  model: C-ZB-RD1P-DPM

        wired_light:
          name: Wired Light Entity
          description: "Choose the light entity of the same RD1-Pro device. This should be the wired load."
          selector:
            entity:
              filter:
                - domain: light

    control_section:
      name: Control Settings
      icon: mdi:tune
      description: Configure brightness step for the wired light
      input:
        brightness_step_pct:
          name: Brightness Step Percentage
          description: How much to change brightness per rotation step
          default: 10
          selector:
            number:
              min: 1
              max: 50
              unit_of_measurement: "%"

    actions_section:
      name: Extra Actions
      icon: mdi:gesture-double-tap
      description: Define what happens on double press, hold, and release
      input:
        on_double_press:
          name: Double Press Actions
          description: Runs when the knob is double pressed
          default: []
          selector:
            action: {}
        on_hold:
          name: Hold Actions
          description: Runs while the knob is held
          default: []
          selector:
            action: {}
        on_release:
          name: Release Actions
          description: Runs when the knob is released
          default: []
          selector:
            action: {}

mode: single
max_exceeded: silent

variables:
  wired_light: !input wired_light
  brightness_step_pct: !input brightness_step_pct

triggers:
  # Press events
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Pressed"
    subtype: "Rotary knob"
    id: pressed

  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Double pressed"
    subtype: "Rotary knob"
    id: double_pressed

  # Hold and release events
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Held"
    subtype: "Rotary knob"
    id: held

  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Released"
    subtype: "Rotary knob"
    id: released

  # Rotation right (treat started and rotating the same)
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Started rotating right"
    subtype: "Rotary knob"
    id: rotate_right
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Rotating right"
    subtype: "Rotary knob"
    id: rotate_right

  # Rotation left (treat started and rotating the same)
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Started rotating left"
    subtype: "Rotary knob"
    id: rotate_left
  - trigger: device
    device_id: !input remote_device
    domain: zha
    type: "Rotating left"
    subtype: "Rotary knob"
    id: rotate_left

condition: []

action:
  - choose:
      # Single press -> toggle wired light
      - conditions:
          - condition: trigger
            id: pressed
        sequence:
          - action: light.toggle
            target:
              entity_id: !input wired_light

      # Double press -> run user actions
      - conditions:
          - condition: trigger
            id: double_pressed
        sequence: !input on_double_press

      # Hold -> run user actions
      - conditions:
          - condition: trigger
            id: held
        sequence: !input on_hold

      # Release -> run user actions
      - conditions:
          - condition: trigger
            id: released
        sequence: !input on_release

      # Rotate right -> brighten wired light
      - conditions:
          - condition: trigger
            id: rotate_right
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input wired_light
            data:
              brightness_step_pct: !input brightness_step_pct

      # Rotate left -> dim wired light
      - conditions:
          - condition: trigger
            id: rotate_left
        sequence:
          - action: light.turn_on
            target:
              entity_id: !input wired_light
            data:
              brightness_step_pct: "{{ -1 * (brightness_step_pct | int) }}"
